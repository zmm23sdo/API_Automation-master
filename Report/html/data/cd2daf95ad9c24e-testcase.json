{
  "uid" : "cd2daf95ad9c24e",
  "name" : "TestBasic.test_personal_02",
  "title" : "Test personal 02",
  "time" : {
    "start" : 1534860560706,
    "stop" : 1534860560791,
    "duration" : 85
  },
  "summary" : {
    "attachments" : 2,
    "steps" : 0
  },
  "failure" : {
    "message" : "MissingSchema: Invalid URL '/Login': No schema supplied. Perhaps you meant http:///Login?",
    "stackTrace" : "self = <test_basic.TestBasic object at 0x10ebf7e80>, action = 'debug'\n\n    @pytest.allure.feature('Home')\n    @allure.severity('blocker')\n    @allure.story('Basic')\n    def test_personal_02(self, action):\n        \"\"\"\n                用例描述：登陆状态下查看基础设置\n            \"\"\"\n        conf = Config()\n        data = Basic()\n>       request = Request.Request(action)\n\nTestCase/test_basic.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nCommon/Request.py:24: in __init__\n    self.get_session = self.session.get_session(env)\nCommon/Session.py:31: in get_session\n    response = session_debug.post(login_url, parm, headers=headers)\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py:555: in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py:494: in request\n    prep = self.prepare_request(req)\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/sessions.py:437: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/models.py:305: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = '/Login', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/requests/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL '/Login': No schema supplied. Perhaps you meant http:///Login?\n\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/requests/models.py:379: MissingSchema"
  },
  "description" : {
    "value" : "\n            用例描述：登陆状态下查看基础设置\n        ",
    "type" : "TEXT"
  },
  "severity" : "BLOCKER",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "b52b622301a405cc",
    "name" : "test_basic",
    "title" : "Test basic"
  },
  "steps" : [ ],
  "attachments" : [ {
    "title" : "Captured log call",
    "source" : "54463353-57b9-437c-b6a2-d4713321ca7c-attachment.txt",
    "type" : "text/plain",
    "size" : 303,
    "uid" : "e6e83283b008ac11"
  }, {
    "title" : "Captured log setup",
    "source" : "a0ebf72a-6366-486e-947a-36f6cbfb0433-attachment.txt",
    "type" : "text/plain",
    "size" : 151,
    "uid" : "2ff93dcf4fd80bc2"
  } ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic"
  }, {
    "name" : "suite-name",
    "value" : "test_basic"
  }, {
    "name" : "host",
    "value" : "192.168.0.101"
  }, {
    "name" : "feature",
    "value" : "Home"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "thread",
    "value" : "23897-MainThread"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}