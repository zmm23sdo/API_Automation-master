{
  "uid" : "7759aa2ac5e7b399",
  "name" : "TestBasic.test_basic_01",
  "title" : "Test basic 01",
  "time" : {
    "start" : 1534920416377,
    "stop" : 1534920417055,
    "duration" : 678
  },
  "summary" : {
    "attachments" : 2,
    "steps" : 0
  },
  "failure" : {
    "message" : "AssertionError: assert False\n +  where False = <bound method Assertions.assert_body of <Common.Assert.Assertions object at 0x10eccf5f8>>({'error': '继续操作前请注册或者登录.'}, 'error', '继续操作前请注册或者登录1.')\n +    where <bound method Assertions.assert_body of <Common.Assert.Assertions object at 0x10eccf5f8>> = <Common.Assert.Assertions object at 0x10eccf5f8>.assert_body",
    "stackTrace" : "self = <test_basic.TestBasic object at 0x10ecaeda0>, action = 'release'\n\n    @pytest.allure.feature('Home')\n    @allure.severity('blocker')\n    @allure.story('Basic')\n    def test_basic_01(self, action):\n        \"\"\"\n                用例描述：未登陆状态下查看基础设置\n            \"\"\"\n        conf = Config()\n        data = Basic()\n        test = Assert.Assertions()\n        request = Request.Request(action)\n    \n        host = conf.host_debug\n        req_url = 'http://' + host\n        urls = data.url\n        params = data.data\n        headers = data.header\n    \n        api_url = req_url + urls[0]\n        response = request.get_request(api_url, params[0], headers[0])\n    \n        assert test.assert_code(response['code'], 401)\n>       assert test.assert_body(response['body'], 'error', u'继续操作前请注册或者登录1.')\nE       AssertionError: assert False\nE        +  where False = <bound method Assertions.assert_body of <Common.Assert.Assertions object at 0x10eccf5f8>>({'error': '继续操作前请注册或者登录.'}, 'error', '继续操作前请注册或者登录1.')\nE        +    where <bound method Assertions.assert_body of <Common.Assert.Assertions object at 0x10eccf5f8>> = <Common.Assert.Assertions object at 0x10eccf5f8>.assert_body\n\nTestCase/test_basic.py:42: AssertionError"
  },
  "description" : {
    "value" : "\n            用例描述：未登陆状态下查看基础设置\n        ",
    "type" : "TEXT"
  },
  "severity" : "BLOCKER",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "8da93a5ed8b9e587",
    "name" : "test_basic",
    "title" : "Test basic"
  },
  "steps" : [ ],
  "attachments" : [ {
    "title" : "Captured log setup",
    "source" : "29f0ac61-61a9-4e58-ac4c-1aebc53052b9-attachment.txt",
    "type" : "text/plain",
    "size" : 151,
    "uid" : "98b0bd4985dbfbb5"
  }, {
    "title" : "Captured log call",
    "source" : "3ba05f2f-9330-4dcc-976a-766f8898e9a3-attachment.txt",
    "type" : "text/plain",
    "size" : 850,
    "uid" : "32c4a41b122be411"
  } ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Basic"
  }, {
    "name" : "thread",
    "value" : "59942-MainThread"
  }, {
    "name" : "suite-name",
    "value" : "test_basic"
  }, {
    "name" : "feature",
    "value" : "Home"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "host",
    "value" : "xiaoxideMacBook-Pro.local"
  }, {
    "name" : "language",
    "value" : "cpython3"
  } ],
  "parameters" : [ ]
}